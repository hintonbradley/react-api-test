###########
## SETUP ##
###########

1. Create a React app
    $ npx create-react-app <app-title>

2. Delete all files inside ./src folder

3. Create Components folder in your ./src folder

4. Create an App.js file in your Components folder with the following code:
import React from 'react';

const App = () => {
    return <div>App</div>
}

export default App;

5. Create an index.js file in your ./src folder and import the App component:
import React from 'react';
import ReactDOM from 'react-dom';
import App from './Components/App';

ReactDOM.render( <App />, document.querySelector('#root'));

6. Start your application
    $ npm start 

7. Create other components as needed.

###############
## API SETUP ##
###############

1. Setup your API developer account, and get your account keys if requiered.
2. Add your https library if needed. 
    $  npm i --s axios
3. In your component that makes the http request, add your endpoint to the network request and your data (params, headers, authorization, etc.) to make your request, and test it in your browser using the networks tab.
axios.get('https://api.unsplash.com/search/photos', {
    params: {
        query: term
    },
    headers: {
        Authorization: 'Client-ID ' + keys.accessKey
    }
})

4. Add async and await to http request to hold response.
...
async onSearchSubmit(term) {
    const resp = await axios.get('https://api.unsplash.com/search/photos', { 
    ...

5. Initialize and update state once a response is received in order to show data.
    ...
    state = {
        images: []
    }
    ...
    })
        
        this.setState({ images: resp.data.results})
    ...
    
6. Update the http method so that we can still keep the context of this (as arrow function with async)
    ...
    onSearchSubmit = async (term) => {
        const resp = await axios.get('https://api.unsplash.com/search/photos', {
    ...